class App{constructor(){}init(){this.initTattooAnimation(),this.handlePreloader(),this.initSliders()}initTattooAnimation(){this.tattoo=new TattooAnimation("#tattoo-canvas",{imagePathPattern:t=>`assets/images/slides/${t}.jpg`,maxFramesToCheck:20,maxCanvasLogicalWidth:1e3,maxCanvasLogicalHeight:1e3})}initSliders(){this.sliders=new Sliders}handlePreloader(){window.addEventListener("load",()=>{setTimeout(()=>{const t=document.querySelector('[data-element="preloader"]');t&&t.classList.add("is-loaded"),document.body.classList.remove("is-overflow")},1500)})}}class TattooAnimation{constructor(t,e={}){this.canvas=document.querySelector(t),this.ctx=this.canvas.getContext("2d"),this.dpr=window.devicePixelRatio||1,this.parentElement=this.canvas.closest(".hero__preview"),this.parentElement||console.error("Родительский элемент .hero__preview не найден для канваса.");this.options={fps:2,imagePathPattern:t=>`assets/images/slides/${t}.jpg`,maxFramesToCheck:100,maxCanvasLogicalWidth:1e3,maxCanvasLogicalHeight:1e3,...e},this.FPS=this.options.fps,this.FRAME_INTERVAL=1e3/this.FPS,this.frames=[],this.currentFrameIndex=0,this.lastTimestamp=0,this.isIntersecting=!1,this.animationFrameId=null,this.boundAnimate=this.animate.bind(this),window.matchMedia("(max-width: 1023px)").matches||(this.resizeCanvas(),window.addEventListener("resize",()=>this.resizeCanvas()),this.setupIntersectionObserver(),this.loadAllFramesAndStart())}resizeCanvas(){const t=this.canvas.getBoundingClientRect();let e=Math.min(t.width,this.options.maxCanvasLogicalWidth)*this.dpr,i=Math.min(t.height,this.options.maxCanvasLogicalHeight)*this.dpr;const s=this.frames[this.currentFrameIndex];if(s){const t=s.width/s.height;t>e/i?i=e/t:e=i*t}this.canvas.width===e&&this.canvas.height===i||(this.canvas.width=e,this.canvas.height=i,this.ctx.setTransform(this.dpr,0,0,this.dpr,0,0),this.isIntersecting&&this.frames.length>0&&this.drawFrame(this.frames[this.currentFrameIndex]))}loadImage(t){return new Promise((e,i)=>{const s=new Image;s.onload=()=>e(s),s.onerror=()=>i(new Error(`Image not found: ${t}`)),s.src=t})}drawFrame(t){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const e=this.canvas.width/this.dpr,i=this.canvas.height/this.dpr;let s,a,n,r;t.width/t.height>e/i?(a=i,s=t.width*(i/t.height),n=(e-s)/2,r=0):(s=e,a=t.height*(e/t.width),n=0,r=(i-a)/2),this.ctx.drawImage(t,n,r,s,a)}async loadAllFramesAndStart(){const t=[];for(let e=0;e<this.options.maxFramesToCheck;e++){const i=this.options.imagePathPattern(e);t.push(this.loadImage(i))}const e=await Promise.allSettled(t),i=[];let s=0;for(let t=0;t<e.length;t++){const a=e[t];if("fulfilled"!==a.status){console.warn(`Stopped loading at missing frame: ${this.options.imagePathPattern(t)}`,a.reason);break}i.push(a.value),s++}0!==s?(this.frames=i,this.drawFrame(this.frames[0]),this.parentElement&&this.parentElement.classList.add("is-ready"),this.isIntersecting&&(this.animationFrameId=requestAnimationFrame(this.boundAnimate))):console.error("Не удалось загрузить ни одного кадра.")}animate(t){if(this.isIntersecting&&this.frames.length>0){this.lastTimestamp||(this.lastTimestamp=t);t-this.lastTimestamp>=this.FRAME_INTERVAL&&(this.drawFrame(this.frames[this.currentFrameIndex]),this.currentFrameIndex=(this.currentFrameIndex+1)%this.frames.length,this.lastTimestamp=t)}this.isIntersecting?this.animationFrameId=requestAnimationFrame(this.boundAnimate):this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)}setupIntersectionObserver(){if(!("IntersectionObserver"in window))return this.isIntersecting=!0,void console.warn("IntersectionObserver не поддерживается.");new IntersectionObserver(t=>{t.forEach(t=>{this.isIntersecting=t.isIntersecting,this.isIntersecting&&!this.animationFrameId?(this.lastTimestamp=0,this.animationFrameId=requestAnimationFrame(this.boundAnimate)):!this.isIntersecting&&this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)})},{root:null,rootMargin:"0px",threshold:.1}).observe(this.canvas)}}class Sliders{constructor(){this.initSliders()}initSliders(){tns({container:".works__tattoo",items:3,mouseDrag:!0,slideBy:"page",swipeAngle:!1,controls:!1,gutter:20,speed:400,responsive:{0:{items:1},900:{items:3}}}),tns({container:".works__arts",items:3,mouseDrag:!0,slideBy:"page",swipeAngle:!1,controls:!1,gutter:20,speed:400,responsive:{0:{items:1},900:{items:3}}})}}document.addEventListener("DOMContentLoaded",()=>{(new App).init()});//# sourceMappingURL=main.min.js.map
